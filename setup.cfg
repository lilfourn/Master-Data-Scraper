[metadata]
name = master-data-scraper
version = 1.0.0
author = Luke Fournier
author_email = luke@example.com
description = A powerful command-line application for web scraping with an intuitive interface
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/lukefournier/master-data-scraper
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12

[options]
packages = find:
python_requires = >=3.8
install_requires =
    requests>=2.31.0
    beautifulsoup4>=4.12.3
    lxml>=5.1.0
    pandas>=2.2.0
    rich>=13.7.0
    click>=8.1.7
    questionary>=2.0.1
    python-dotenv>=1.0.1
    validators>=0.22.0

[options.packages.find]
exclude =
    tests
    tests.*

[options.entry_points]
console_scripts =
    scraper = main:main
    master-scraper = main:main

[options.extras_require]
dev =
    pytest>=8.0.0
    black>=24.1.0
    pylint>=3.0.0
    mypy>=1.8.0
    coverage>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-tests.*]
ignore_errors = True

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --cov=. --cov-report=term-missing --cov-report=html

[coverage:run]
source = .
omit =
    */tests/*
    */test_*
    setup.py
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .eggs,
    *.egg,
    venv,
    .venv

[black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True